function [xCoeff,yCoeff,dXin_dVar,dYin_dVar] = calcValFromExpressions(deriveByVar,vertices,params)
V = vertices';

Krgb = params.Krgb;
A = params.rgbPmat;
d = params.rgbDistort;
f1 = A*V;
x_in = f1(1,:)./f1(3,:);
y_in = f1(2,:)./f1(3,:);

x1 = (x_in-params.Krgb(1,3))/params.Krgb(1,1);
y1 = (y_in-params.Krgb(2,3))/params.Krgb(2,2);
r2 = x1.^2 + y1.^2;
Rc = 1+params.rgbDistort(1,1).*r2+params.rgbDistort(1,2).*r2.^2+params.rgbDistort(1,5).*r2.^3;
switch  deriveByVar
    case 'P'
        xCoeff = [(V(1,:).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); (V(2,:).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); (V(3,:).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); (V(4,:).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:));...
            (Krgb(1,1).*V(1,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:))); (Krgb(1,1).*V(2,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:))); (Krgb(1,1).*V(3,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:))); (Krgb(1,1).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)));...
            - (V(1,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(1,1).*V(1,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2); - (V(2,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(1,1).*V(2,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2); - (V(3,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(1,1).*V(3,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2); - (V(4,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(1,1).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(Krgb(2,2).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2)];
        
        yCoeff = [(Krgb(2,2).*V(1,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:))); (Krgb(2,2).*V(2,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:))); (Krgb(2,2).*V(3,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:))); (Krgb(2,2).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)));...
            (V(1,:).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); (V(2,:).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:));(V(3,:).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); (V(4,:).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:));...
            - (V(1,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(2,2).*V(1,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2); - (V(2,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(2,2).*V(2,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2); - (V(3,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(2,2).*V(3,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2); - (V(4,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(r2) + 6.*d(1,5).*y1.*(r2).^2)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2 - (Krgb(2,2).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(r2) + 6.*d(1,5).*x1.*(r2).^2)).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(Krgb(1,1).*(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2)];
        
        dXin_dVar = [ V(1,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); V(2,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); V(3,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); V(4,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:));...
            zeros(1,size(V,2)); zeros(1,size(V,2)); zeros(1,size(V,2)); zeros(1,size(V,2));...
            -(V(1,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2; -(V(2,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2; -(V(3,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2; -(V(4,:).*(A(1,1).*V(1,:) + A(1,2).*V(2,:) + A(1,3).*V(3,:) + A(1,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2];
        dYin_dVar = [ zeros(1,size(V,2)); zeros(1,size(V,2)); zeros(1,size(V,2)); zeros(1,size(V,2));...
            V(1,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); V(2,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)); V(3,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:));  V(4,:)./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:));...
            -(V(1,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2; -(V(2,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2; -(V(3,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2; -(V(4,:).*(A(2,1).*V(1,:) + A(2,2).*V(2,:) + A(2,3).*V(3,:) + A(2,4).*V(4,:)))./(A(3,1).*V(1,:) + A(3,2).*V(2,:) + A(3,3).*V(3,:) + A(3,4).*V(4,:)).^2];
    case 'R'
        T = params.Trgb;
        R = params.Rrgb;
        [xAlpha,yBeta,zGamma] = OnlineCalibration.aux.extractAnglesFromRotMat(R);
        xCoeff.xAlpha = (((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(1,:).*(Krgb(1,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(1,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(1,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(1,2).*cos(xAlpha).*cos(yBeta) + Krgb(1,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2 + (Krgb(1,1).*((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(1,:).*(Krgb(2,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(2,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(2,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(2,2).*cos(xAlpha).*cos(yBeta) + Krgb(2,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)))./(Krgb(2,2).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2);
        xCoeff.yBeta = - (((V(3,:).*(Krgb(3,1).*cos(yBeta) - Krgb(3,3).*cos(xAlpha).*sin(yBeta) + Krgb(3,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(3,1).*cos(zGamma).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(3,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(3,1).*sin(yBeta).*sin(zGamma) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(3,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(3,:).*(Krgb(1,1).*cos(yBeta) - Krgb(1,3).*cos(xAlpha).*sin(yBeta) + Krgb(1,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(1,1).*cos(zGamma).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(1,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(1,1).*sin(yBeta).*sin(zGamma) + Krgb(1,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(1,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2 - (Krgb(1,1).*((V(3,:).*(Krgb(3,1).*cos(yBeta) - Krgb(3,3).*cos(xAlpha).*sin(yBeta) + Krgb(3,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(3,1).*cos(zGamma).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(3,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(3,1).*sin(yBeta).*sin(zGamma) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(3,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(3,:).*(Krgb(2,1).*cos(yBeta) - Krgb(2,3).*cos(xAlpha).*sin(yBeta) + Krgb(2,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(2,1).*cos(zGamma).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(2,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(2,1).*sin(yBeta).*sin(zGamma) + Krgb(2,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(2,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)))./(Krgb(2,2).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2);
        xCoeff.zGamma = (((V(2,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(2,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2 + (Krgb(1,1).*((V(2,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(2,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)))./(Krgb(2,2).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2);
        
        yCoeff.xAlpha = (((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(1,:).*(Krgb(2,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(2,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(2,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(2,2).*cos(xAlpha).*cos(yBeta) + Krgb(2,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2 + (Krgb(2,2).*((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(1,:).*(Krgb(1,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(1,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(1,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(1,2).*cos(xAlpha).*cos(yBeta) + Krgb(1,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)))./(Krgb(1,1).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2);
        yCoeff.yBeta = - (((V(3,:).*(Krgb(3,1).*cos(yBeta) - Krgb(3,3).*cos(xAlpha).*sin(yBeta) + Krgb(3,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(3,1).*cos(zGamma).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(3,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(3,1).*sin(yBeta).*sin(zGamma) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(3,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(3,:).*(Krgb(2,1).*cos(yBeta) - Krgb(2,3).*cos(xAlpha).*sin(yBeta) + Krgb(2,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(2,1).*cos(zGamma).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(2,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(2,1).*sin(yBeta).*sin(zGamma) + Krgb(2,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(2,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2 - (Krgb(2,2).*((V(3,:).*(Krgb(3,1).*cos(yBeta) - Krgb(3,3).*cos(xAlpha).*sin(yBeta) + Krgb(3,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(3,1).*cos(zGamma).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(3,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(3,1).*sin(yBeta).*sin(zGamma) + Krgb(3,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(3,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(3,:).*(Krgb(1,1).*cos(yBeta) - Krgb(1,3).*cos(xAlpha).*sin(yBeta) + Krgb(1,2).*sin(xAlpha).*sin(yBeta)) - V(1,:).*(Krgb(1,1).*cos(zGamma).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta).*cos(zGamma) - Krgb(1,2).*cos(yBeta).*cos(zGamma).*sin(xAlpha)) + V(2,:).*(Krgb(1,1).*sin(yBeta).*sin(zGamma) + Krgb(1,3).*cos(xAlpha).*cos(yBeta).*sin(zGamma) - Krgb(1,2).*cos(yBeta).*sin(xAlpha).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)))./(Krgb(1,1).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2);
        yCoeff.zGamma = (((V(2,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(2,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2 + (Krgb(2,2).*((V(2,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(2,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) - V(1,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1)))).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)))./(Krgb(1,1).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2);
        
        dXin_dVar.xAlpha = ((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(1,:).*(Krgb(1,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(1,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(1,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(1,2).*cos(xAlpha).*cos(yBeta) + Krgb(1,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2;
        dXin_dVar.yBeta = ((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(1,:).*(Krgb(1,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(1,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(1,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(1,2).*cos(xAlpha).*cos(yBeta) + Krgb(1,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2;
        dXin_dVar.zGamma = ((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(1,1).*sin(yBeta) + Krgb(1,3).*cos(xAlpha).*cos(yBeta) - Krgb(1,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(1,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(1,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(1,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(1,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(1,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(1,1).*T(1,1) + Krgb(1,2).*T(2,1) + Krgb(1,3).*T(3,1))) - (V(1,:).*(Krgb(1,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(1,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(1,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(1,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(1,2).*cos(xAlpha).*cos(yBeta) + Krgb(1,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2;
        
        dYin_dVar.xAlpha = ((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(1,:).*(Krgb(2,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(2,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(2,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(2,2).*cos(xAlpha).*cos(yBeta) + Krgb(2,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2;
        dYin_dVar.yBeta = ((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(1,:).*(Krgb(2,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(2,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(2,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(2,2).*cos(xAlpha).*cos(yBeta) + Krgb(2,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2;
        dYin_dVar.zGamma = ((V(1,:).*(Krgb(3,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(3,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(3,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(3,2).*cos(xAlpha).*cos(yBeta) + Krgb(3,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(2,1).*sin(yBeta) + Krgb(2,3).*cos(xAlpha).*cos(yBeta) - Krgb(2,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(2,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(2,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(2,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(2,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(2,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(2,1).*T(1,1) + Krgb(2,2).*T(2,1) + Krgb(2,3).*T(3,1))) - (V(1,:).*(Krgb(2,2).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) - Krgb(2,3).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta))) + V(2,:).*(Krgb(2,2).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(2,3).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma))) + V(3,:).*(Krgb(2,2).*cos(xAlpha).*cos(yBeta) + Krgb(2,3).*cos(yBeta).*sin(xAlpha))).*(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))))./(V(3,:).*(Krgb(3,1).*sin(yBeta) + Krgb(3,3).*cos(xAlpha).*cos(yBeta) - Krgb(3,2).*cos(yBeta).*sin(xAlpha)) + V(1,:).*(Krgb(3,2).*(cos(xAlpha).*sin(zGamma) + cos(zGamma).*sin(xAlpha).*sin(yBeta)) + Krgb(3,3).*(sin(xAlpha).*sin(zGamma) - cos(xAlpha).*cos(zGamma).*sin(yBeta)) + Krgb(3,1).*cos(yBeta).*cos(zGamma)) + V(2,:).*(Krgb(3,2).*(cos(xAlpha).*cos(zGamma) - sin(xAlpha).*sin(yBeta).*sin(zGamma)) + Krgb(3,3).*(cos(zGamma).*sin(xAlpha) + cos(xAlpha).*sin(yBeta).*sin(zGamma)) - Krgb(3,1).*cos(yBeta).*sin(zGamma)) + V(4,:).*(Krgb(3,1).*T(1,1) + Krgb(3,2).*T(2,1) + Krgb(3,3).*T(3,1))).^2;
    case 'T'
        T = params.Trgb;
        R = params.Rrgb;
        xCoeff = [(V(4,:).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)).*(Krgb(1,1).*Krgb(3,2).*R(2,1).*V(1,:) - Krgb(1,2).*Krgb(3,1).*R(2,1).*V(1,:) + Krgb(1,1).*Krgb(3,2).*R(2,2).*V(2,:) - Krgb(1,2).*Krgb(3,1).*R(2,2).*V(2,:) + Krgb(1,1).*Krgb(3,2).*R(2,3).*V(3,:) - Krgb(1,2).*Krgb(3,1).*R(2,3).*V(3,:) + Krgb(1,1).*Krgb(3,3).*R(3,1).*V(1,:) - Krgb(1,3).*Krgb(3,1).*R(3,1).*V(1,:) + Krgb(1,1).*Krgb(3,3).*R(3,2).*V(2,:) - Krgb(1,3).*Krgb(3,1).*R(3,2).*V(2,:) + Krgb(1,1).*Krgb(3,3).*R(3,3).*V(3,:) - Krgb(1,3).*Krgb(3,1).*R(3,3).*V(3,:) + Krgb(1,1).*Krgb(3,2).*T(2,1).*V(4,:) - Krgb(1,2).*Krgb(3,1).*T(2,1).*V(4,:) + Krgb(1,1).*Krgb(3,3).*T(3,1).*V(4,:) - Krgb(1,3).*Krgb(3,1).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2 + (Krgb(1,1).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)).*(Krgb(2,1).*Krgb(3,2).*R(2,1).*V(1,:) - Krgb(2,2).*Krgb(3,1).*R(2,1).*V(1,:) + Krgb(2,1).*Krgb(3,2).*R(2,2).*V(2,:) - Krgb(2,2).*Krgb(3,1).*R(2,2).*V(2,:) + Krgb(2,1).*Krgb(3,2).*R(2,3).*V(3,:) - Krgb(2,2).*Krgb(3,1).*R(2,3).*V(3,:) + Krgb(2,1).*Krgb(3,3).*R(3,1).*V(1,:) - Krgb(2,3).*Krgb(3,1).*R(3,1).*V(1,:) + Krgb(2,1).*Krgb(3,3).*R(3,2).*V(2,:) - Krgb(2,3).*Krgb(3,1).*R(3,2).*V(2,:) + Krgb(2,1).*Krgb(3,3).*R(3,3).*V(3,:) - Krgb(2,3).*Krgb(3,1).*R(3,3).*V(3,:) + Krgb(2,1).*Krgb(3,2).*T(2,1).*V(4,:) - Krgb(2,2).*Krgb(3,1).*T(2,1).*V(4,:) + Krgb(2,1).*Krgb(3,3).*T(3,1).*V(4,:) - Krgb(2,3).*Krgb(3,1).*T(3,1).*V(4,:)))./(Krgb(2,2).*(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2); - (V(4,:).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)).*(Krgb(1,1).*Krgb(3,2).*R(1,1).*V(1,:) - Krgb(1,2).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(1,1).*Krgb(3,2).*R(1,2).*V(2,:) - Krgb(1,2).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(1,1).*Krgb(3,2).*R(1,3).*V(3,:) - Krgb(1,2).*Krgb(3,1).*R(1,3).*V(3,:) - Krgb(1,2).*Krgb(3,3).*R(3,1).*V(1,:) + Krgb(1,3).*Krgb(3,2).*R(3,1).*V(1,:) - Krgb(1,2).*Krgb(3,3).*R(3,2).*V(2,:) + Krgb(1,3).*Krgb(3,2).*R(3,2).*V(2,:) - Krgb(1,2).*Krgb(3,3).*R(3,3).*V(3,:) + Krgb(1,3).*Krgb(3,2).*R(3,3).*V(3,:) + Krgb(1,1).*Krgb(3,2).*T(1,1).*V(4,:) - Krgb(1,2).*Krgb(3,1).*T(1,1).*V(4,:) - Krgb(1,2).*Krgb(3,3).*T(3,1).*V(4,:) + Krgb(1,3).*Krgb(3,2).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2 - (Krgb(1,1).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)).*(Krgb(2,1).*Krgb(3,2).*R(1,1).*V(1,:) - Krgb(2,2).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(2,1).*Krgb(3,2).*R(1,2).*V(2,:) - Krgb(2,2).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(2,1).*Krgb(3,2).*R(1,3).*V(3,:) - Krgb(2,2).*Krgb(3,1).*R(1,3).*V(3,:) - Krgb(2,2).*Krgb(3,3).*R(3,1).*V(1,:) + Krgb(2,3).*Krgb(3,2).*R(3,1).*V(1,:) - Krgb(2,2).*Krgb(3,3).*R(3,2).*V(2,:) + Krgb(2,3).*Krgb(3,2).*R(3,2).*V(2,:) - Krgb(2,2).*Krgb(3,3).*R(3,3).*V(3,:) + Krgb(2,3).*Krgb(3,2).*R(3,3).*V(3,:) + Krgb(2,1).*Krgb(3,2).*T(1,1).*V(4,:) - Krgb(2,2).*Krgb(3,1).*T(1,1).*V(4,:) - Krgb(2,2).*Krgb(3,3).*T(3,1).*V(4,:) + Krgb(2,3).*Krgb(3,2).*T(3,1).*V(4,:)))./(Krgb(2,2).*(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2); - (V(4,:).*(Rc + 6.*d(1,4).*x1 + 2.*d(1,3).*y1 + x1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)).*(Krgb(1,1).*Krgb(3,3).*R(1,1).*V(1,:) - Krgb(1,3).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(1,1).*Krgb(3,3).*R(1,2).*V(2,:) - Krgb(1,3).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(1,1).*Krgb(3,3).*R(1,3).*V(3,:) - Krgb(1,3).*Krgb(3,1).*R(1,3).*V(3,:) + Krgb(1,2).*Krgb(3,3).*R(2,1).*V(1,:) - Krgb(1,3).*Krgb(3,2).*R(2,1).*V(1,:) + Krgb(1,2).*Krgb(3,3).*R(2,2).*V(2,:) - Krgb(1,3).*Krgb(3,2).*R(2,2).*V(2,:) + Krgb(1,2).*Krgb(3,3).*R(2,3).*V(3,:) - Krgb(1,3).*Krgb(3,2).*R(2,3).*V(3,:) + Krgb(1,1).*Krgb(3,3).*T(1,1).*V(4,:) - Krgb(1,3).*Krgb(3,1).*T(1,1).*V(4,:) + Krgb(1,2).*Krgb(3,3).*T(2,1).*V(4,:) - Krgb(1,3).*Krgb(3,2).*T(2,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2 - (Krgb(1,1).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + x1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)).*(Krgb(2,1).*Krgb(3,3).*R(1,1).*V(1,:) - Krgb(2,3).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(2,1).*Krgb(3,3).*R(1,2).*V(2,:) - Krgb(2,3).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(2,1).*Krgb(3,3).*R(1,3).*V(3,:) - Krgb(2,3).*Krgb(3,1).*R(1,3).*V(3,:) + Krgb(2,2).*Krgb(3,3).*R(2,1).*V(1,:) - Krgb(2,3).*Krgb(3,2).*R(2,1).*V(1,:) + Krgb(2,2).*Krgb(3,3).*R(2,2).*V(2,:) - Krgb(2,3).*Krgb(3,2).*R(2,2).*V(2,:) + Krgb(2,2).*Krgb(3,3).*R(2,3).*V(3,:) - Krgb(2,3).*Krgb(3,2).*R(2,3).*V(3,:) + Krgb(2,1).*Krgb(3,3).*T(1,1).*V(4,:) - Krgb(2,3).*Krgb(3,1).*T(1,1).*V(4,:) + Krgb(2,2).*Krgb(3,3).*T(2,1).*V(4,:) - Krgb(2,3).*Krgb(3,2).*T(2,1).*V(4,:)))./(Krgb(2,2).*(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2)];
        yCoeff = [(V(4,:).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)).*(Krgb(2,1).*Krgb(3,2).*R(2,1).*V(1,:) - Krgb(2,2).*Krgb(3,1).*R(2,1).*V(1,:) + Krgb(2,1).*Krgb(3,2).*R(2,2).*V(2,:) - Krgb(2,2).*Krgb(3,1).*R(2,2).*V(2,:) + Krgb(2,1).*Krgb(3,2).*R(2,3).*V(3,:) - Krgb(2,2).*Krgb(3,1).*R(2,3).*V(3,:) + Krgb(2,1).*Krgb(3,3).*R(3,1).*V(1,:) - Krgb(2,3).*Krgb(3,1).*R(3,1).*V(1,:) + Krgb(2,1).*Krgb(3,3).*R(3,2).*V(2,:) - Krgb(2,3).*Krgb(3,1).*R(3,2).*V(2,:) + Krgb(2,1).*Krgb(3,3).*R(3,3).*V(3,:) - Krgb(2,3).*Krgb(3,1).*R(3,3).*V(3,:) + Krgb(2,1).*Krgb(3,2).*T(2,1).*V(4,:) - Krgb(2,2).*Krgb(3,1).*T(2,1).*V(4,:) + Krgb(2,1).*Krgb(3,3).*T(3,1).*V(4,:) - Krgb(2,3).*Krgb(3,1).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2 + (Krgb(2,2).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)).*(Krgb(1,1).*Krgb(3,2).*R(2,1).*V(1,:) - Krgb(1,2).*Krgb(3,1).*R(2,1).*V(1,:) + Krgb(1,1).*Krgb(3,2).*R(2,2).*V(2,:) - Krgb(1,2).*Krgb(3,1).*R(2,2).*V(2,:) + Krgb(1,1).*Krgb(3,2).*R(2,3).*V(3,:) - Krgb(1,2).*Krgb(3,1).*R(2,3).*V(3,:) + Krgb(1,1).*Krgb(3,3).*R(3,1).*V(1,:) - Krgb(1,3).*Krgb(3,1).*R(3,1).*V(1,:) + Krgb(1,1).*Krgb(3,3).*R(3,2).*V(2,:) - Krgb(1,3).*Krgb(3,1).*R(3,2).*V(2,:) + Krgb(1,1).*Krgb(3,3).*R(3,3).*V(3,:) - Krgb(1,3).*Krgb(3,1).*R(3,3).*V(3,:) + Krgb(1,1).*Krgb(3,2).*T(2,1).*V(4,:) - Krgb(1,2).*Krgb(3,1).*T(2,1).*V(4,:) + Krgb(1,1).*Krgb(3,3).*T(3,1).*V(4,:) - Krgb(1,3).*Krgb(3,1).*T(3,1).*V(4,:)))./(Krgb(1,1).*(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2); - (V(4,:).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)).*(Krgb(2,1).*Krgb(3,2).*R(1,1).*V(1,:) - Krgb(2,2).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(2,1).*Krgb(3,2).*R(1,2).*V(2,:) - Krgb(2,2).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(2,1).*Krgb(3,2).*R(1,3).*V(3,:) - Krgb(2,2).*Krgb(3,1).*R(1,3).*V(3,:) - Krgb(2,2).*Krgb(3,3).*R(3,1).*V(1,:) + Krgb(2,3).*Krgb(3,2).*R(3,1).*V(1,:) - Krgb(2,2).*Krgb(3,3).*R(3,2).*V(2,:) + Krgb(2,3).*Krgb(3,2).*R(3,2).*V(2,:) - Krgb(2,2).*Krgb(3,3).*R(3,3).*V(3,:) + Krgb(2,3).*Krgb(3,2).*R(3,3).*V(3,:) + Krgb(2,1).*Krgb(3,2).*T(1,1).*V(4,:) - Krgb(2,2).*Krgb(3,1).*T(1,1).*V(4,:) - Krgb(2,2).*Krgb(3,3).*T(3,1).*V(4,:) + Krgb(2,3).*Krgb(3,2).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2 - (Krgb(2,2).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)).*(Krgb(1,1).*Krgb(3,2).*R(1,1).*V(1,:) - Krgb(1,2).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(1,1).*Krgb(3,2).*R(1,2).*V(2,:) - Krgb(1,2).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(1,1).*Krgb(3,2).*R(1,3).*V(3,:) - Krgb(1,2).*Krgb(3,1).*R(1,3).*V(3,:) - Krgb(1,2).*Krgb(3,3).*R(3,1).*V(1,:) + Krgb(1,3).*Krgb(3,2).*R(3,1).*V(1,:) - Krgb(1,2).*Krgb(3,3).*R(3,2).*V(2,:) + Krgb(1,3).*Krgb(3,2).*R(3,2).*V(2,:) - Krgb(1,2).*Krgb(3,3).*R(3,3).*V(3,:) + Krgb(1,3).*Krgb(3,2).*R(3,3).*V(3,:) + Krgb(1,1).*Krgb(3,2).*T(1,1).*V(4,:) - Krgb(1,2).*Krgb(3,1).*T(1,1).*V(4,:) - Krgb(1,2).*Krgb(3,3).*T(3,1).*V(4,:) + Krgb(1,3).*Krgb(3,2).*T(3,1).*V(4,:)))./(Krgb(1,1).*(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2); - (V(4,:).*(Rc + 2.*d(1,4).*x1 + 6.*d(1,3).*y1 + y1.*(2.*d(1,1).*y1 + 4.*d(1,2).*y1.*(x1.^2 + y1.^2) + 6.*d(1,5).*y1.*(x1.^2 + y1.^2).^2)).*(Krgb(2,1).*Krgb(3,3).*R(1,1).*V(1,:) - Krgb(2,3).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(2,1).*Krgb(3,3).*R(1,2).*V(2,:) - Krgb(2,3).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(2,1).*Krgb(3,3).*R(1,3).*V(3,:) - Krgb(2,3).*Krgb(3,1).*R(1,3).*V(3,:) + Krgb(2,2).*Krgb(3,3).*R(2,1).*V(1,:) - Krgb(2,3).*Krgb(3,2).*R(2,1).*V(1,:) + Krgb(2,2).*Krgb(3,3).*R(2,2).*V(2,:) - Krgb(2,3).*Krgb(3,2).*R(2,2).*V(2,:) + Krgb(2,2).*Krgb(3,3).*R(2,3).*V(3,:) - Krgb(2,3).*Krgb(3,2).*R(2,3).*V(3,:) + Krgb(2,1).*Krgb(3,3).*T(1,1).*V(4,:) - Krgb(2,3).*Krgb(3,1).*T(1,1).*V(4,:) + Krgb(2,2).*Krgb(3,3).*T(2,1).*V(4,:) - Krgb(2,3).*Krgb(3,2).*T(2,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2 - (Krgb(2,2).*V(4,:).*(2.*d(1,3).*x1 + 2.*d(1,4).*y1 + y1.*(2.*d(1,1).*x1 + 4.*d(1,2).*x1.*(x1.^2 + y1.^2) + 6.*d(1,5).*x1.*(x1.^2 + y1.^2).^2)).*(Krgb(1,1).*Krgb(3,3).*R(1,1).*V(1,:) - Krgb(1,3).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(1,1).*Krgb(3,3).*R(1,2).*V(2,:) - Krgb(1,3).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(1,1).*Krgb(3,3).*R(1,3).*V(3,:) - Krgb(1,3).*Krgb(3,1).*R(1,3).*V(3,:) + Krgb(1,2).*Krgb(3,3).*R(2,1).*V(1,:) - Krgb(1,3).*Krgb(3,2).*R(2,1).*V(1,:) + Krgb(1,2).*Krgb(3,3).*R(2,2).*V(2,:) - Krgb(1,3).*Krgb(3,2).*R(2,2).*V(2,:) + Krgb(1,2).*Krgb(3,3).*R(2,3).*V(3,:) - Krgb(1,3).*Krgb(3,2).*R(2,3).*V(3,:) + Krgb(1,1).*Krgb(3,3).*T(1,1).*V(4,:) - Krgb(1,3).*Krgb(3,1).*T(1,1).*V(4,:) + Krgb(1,2).*Krgb(3,3).*T(2,1).*V(4,:) - Krgb(1,3).*Krgb(3,2).*T(2,1).*V(4,:)))./(Krgb(1,1).*(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2)];
        dXin_dVar = [(V(4,:).*(Krgb(1,1).*Krgb(3,2).*R(2,1).*V(1,:) - Krgb(1,2).*Krgb(3,1).*R(2,1).*V(1,:) + Krgb(1,1).*Krgb(3,2).*R(2,2).*V(2,:) - Krgb(1,2).*Krgb(3,1).*R(2,2).*V(2,:) + Krgb(1,1).*Krgb(3,2).*R(2,3).*V(3,:) - Krgb(1,2).*Krgb(3,1).*R(2,3).*V(3,:) + Krgb(1,1).*Krgb(3,3).*R(3,1).*V(1,:) - Krgb(1,3).*Krgb(3,1).*R(3,1).*V(1,:) + Krgb(1,1).*Krgb(3,3).*R(3,2).*V(2,:) - Krgb(1,3).*Krgb(3,1).*R(3,2).*V(2,:) + Krgb(1,1).*Krgb(3,3).*R(3,3).*V(3,:) - Krgb(1,3).*Krgb(3,1).*R(3,3).*V(3,:) + Krgb(1,1).*Krgb(3,2).*T(2,1).*V(4,:) - Krgb(1,2).*Krgb(3,1).*T(2,1).*V(4,:) + Krgb(1,1).*Krgb(3,3).*T(3,1).*V(4,:) - Krgb(1,3).*Krgb(3,1).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2, -(V(4,:).*(Krgb(1,1).*Krgb(3,2).*R(1,1).*V(1,:) - Krgb(1,2).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(1,1).*Krgb(3,2).*R(1,2).*V(2,:) - Krgb(1,2).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(1,1).*Krgb(3,2).*R(1,3).*V(3,:) - Krgb(1,2).*Krgb(3,1).*R(1,3).*V(3,:) - Krgb(1,2).*Krgb(3,3).*R(3,1).*V(1,:) + Krgb(1,3).*Krgb(3,2).*R(3,1).*V(1,:) - Krgb(1,2).*Krgb(3,3).*R(3,2).*V(2,:) + Krgb(1,3).*Krgb(3,2).*R(3,2).*V(2,:) - Krgb(1,2).*Krgb(3,3).*R(3,3).*V(3,:) + Krgb(1,3).*Krgb(3,2).*R(3,3).*V(3,:) + Krgb(1,1).*Krgb(3,2).*T(1,1).*V(4,:) - Krgb(1,2).*Krgb(3,1).*T(1,1).*V(4,:) - Krgb(1,2).*Krgb(3,3).*T(3,1).*V(4,:) + Krgb(1,3).*Krgb(3,2).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2, -(V(4,:).*(Krgb(1,1).*Krgb(3,3).*R(1,1).*V(1,:) - Krgb(1,3).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(1,1).*Krgb(3,3).*R(1,2).*V(2,:) - Krgb(1,3).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(1,1).*Krgb(3,3).*R(1,3).*V(3,:) - Krgb(1,3).*Krgb(3,1).*R(1,3).*V(3,:) + Krgb(1,2).*Krgb(3,3).*R(2,1).*V(1,:) - Krgb(1,3).*Krgb(3,2).*R(2,1).*V(1,:) + Krgb(1,2).*Krgb(3,3).*R(2,2).*V(2,:) - Krgb(1,3).*Krgb(3,2).*R(2,2).*V(2,:) + Krgb(1,2).*Krgb(3,3).*R(2,3).*V(3,:) - Krgb(1,3).*Krgb(3,2).*R(2,3).*V(3,:) + Krgb(1,1).*Krgb(3,3).*T(1,1).*V(4,:) - Krgb(1,3).*Krgb(3,1).*T(1,1).*V(4,:) + Krgb(1,2).*Krgb(3,3).*T(2,1).*V(4,:) - Krgb(1,3).*Krgb(3,2).*T(2,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2];
        dYin_dVar = [(V(4,:).*(Krgb(2,1).*Krgb(3,2).*R(2,1).*V(1,:) - Krgb(2,2).*Krgb(3,1).*R(2,1).*V(1,:) + Krgb(2,1).*Krgb(3,2).*R(2,2).*V(2,:) - Krgb(2,2).*Krgb(3,1).*R(2,2).*V(2,:) + Krgb(2,1).*Krgb(3,2).*R(2,3).*V(3,:) - Krgb(2,2).*Krgb(3,1).*R(2,3).*V(3,:) + Krgb(2,1).*Krgb(3,3).*R(3,1).*V(1,:) - Krgb(2,3).*Krgb(3,1).*R(3,1).*V(1,:) + Krgb(2,1).*Krgb(3,3).*R(3,2).*V(2,:) - Krgb(2,3).*Krgb(3,1).*R(3,2).*V(2,:) + Krgb(2,1).*Krgb(3,3).*R(3,3).*V(3,:) - Krgb(2,3).*Krgb(3,1).*R(3,3).*V(3,:) + Krgb(2,1).*Krgb(3,2).*T(2,1).*V(4,:) - Krgb(2,2).*Krgb(3,1).*T(2,1).*V(4,:) + Krgb(2,1).*Krgb(3,3).*T(3,1).*V(4,:) - Krgb(2,3).*Krgb(3,1).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2, -(V(4,:).*(Krgb(2,1).*Krgb(3,2).*R(1,1).*V(1,:) - Krgb(2,2).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(2,1).*Krgb(3,2).*R(1,2).*V(2,:) - Krgb(2,2).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(2,1).*Krgb(3,2).*R(1,3).*V(3,:) - Krgb(2,2).*Krgb(3,1).*R(1,3).*V(3,:) - Krgb(2,2).*Krgb(3,3).*R(3,1).*V(1,:) + Krgb(2,3).*Krgb(3,2).*R(3,1).*V(1,:) - Krgb(2,2).*Krgb(3,3).*R(3,2).*V(2,:) + Krgb(2,3).*Krgb(3,2).*R(3,2).*V(2,:) - Krgb(2,2).*Krgb(3,3).*R(3,3).*V(3,:) + Krgb(2,3).*Krgb(3,2).*R(3,3).*V(3,:) + Krgb(2,1).*Krgb(3,2).*T(1,1).*V(4,:) - Krgb(2,2).*Krgb(3,1).*T(1,1).*V(4,:) - Krgb(2,2).*Krgb(3,3).*T(3,1).*V(4,:) + Krgb(2,3).*Krgb(3,2).*T(3,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2, -(V(4,:).*(Krgb(2,1).*Krgb(3,3).*R(1,1).*V(1,:) - Krgb(2,3).*Krgb(3,1).*R(1,1).*V(1,:) + Krgb(2,1).*Krgb(3,3).*R(1,2).*V(2,:) - Krgb(2,3).*Krgb(3,1).*R(1,2).*V(2,:) + Krgb(2,1).*Krgb(3,3).*R(1,3).*V(3,:) - Krgb(2,3).*Krgb(3,1).*R(1,3).*V(3,:) + Krgb(2,2).*Krgb(3,3).*R(2,1).*V(1,:) - Krgb(2,3).*Krgb(3,2).*R(2,1).*V(1,:) + Krgb(2,2).*Krgb(3,3).*R(2,2).*V(2,:) - Krgb(2,3).*Krgb(3,2).*R(2,2).*V(2,:) + Krgb(2,2).*Krgb(3,3).*R(2,3).*V(3,:) - Krgb(2,3).*Krgb(3,2).*R(2,3).*V(3,:) + Krgb(2,1).*Krgb(3,3).*T(1,1).*V(4,:) - Krgb(2,3).*Krgb(3,1).*T(1,1).*V(4,:) + Krgb(2,2).*Krgb(3,3).*T(2,1).*V(4,:) - Krgb(2,3).*Krgb(3,2).*T(2,1).*V(4,:)))./(Krgb(3,1).*R(1,1).*V(1,:) + Krgb(3,1).*R(1,2).*V(2,:) + Krgb(3,1).*R(1,3).*V(3,:) + Krgb(3,2).*R(2,1).*V(1,:) + Krgb(3,2).*R(2,2).*V(2,:) + Krgb(3,2).*R(2,3).*V(3,:) + Krgb(3,3).*R(3,1).*V(1,:) + Krgb(3,3).*R(3,2).*V(2,:) + Krgb(3,3).*R(3,3).*V(3,:) + Krgb(3,1).*T(1,1).*V(4,:) + Krgb(3,2).*T(2,1).*V(4,:) + Krgb(3,3).*T(3,1).*V(4,:)).^2];
    otherwise
        error(['No such sym named ' char(varsInSym(k))]);
end
end


