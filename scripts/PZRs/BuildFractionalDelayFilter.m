function H = BuildFractionalDelayFilter(delay, nSamples)

if (mod(nSamples,2)==0) % even
    H = [1,...
        exp(-2j*pi/nSamples*delay*(1:nSamples/2-1)),...
        cos(pi*delay),...
        exp(2j*pi/nSamples*delay*(nSamples/2-1:-1:1))];
else % odd
    H = [1,...
        exp(-2j*pi/nSamples*delay*(1:ceil(nSamples/2)-1)),...
        cos(pi*delay),...
        exp(2j*pi/nSamples*delay*(floor(nSamples/2)-1:-1:1))];
end
