/*****************************************************************************

                                    basic_ios

    C++ compatible header file for use in compiling SystemC.

    $Id: basic_ios,v 1.3 2005-06-15 22:55:13 deg Exp $

*****************************************************************************/

#ifndef _BASIC_IOS
#define _BASIC_IOS

#include <streambuf>        /* for basic_streambuf */
#include <char_traits>      /* for char_traits */
#include <ios_base>         /* for ios_base */
#include <iosfwd>           /* for default template arguments */

namespace std { 

    template <class charT, class traits>
        class basic_ostream;    /* avoids an include loop */

    template <class charT, class traits> 
    class basic_ios : public ios_base { 
    public: 

        // Types: 
        typedef charT char_type; 
        typedef typename traits::int_type int_type; 
        typedef typename traits::pos_type pos_type; 
        typedef typename traits::off_type off_type; 
        typedef traits traits_type;

        operator void*() const; 
        bool operator!() const; 
        iostate rdstate() const; 
        void clear(iostate state = goodbit); 
        void setstate(iostate state); 
        bool good() const; 
        bool eof() const; 
        bool fail() const; 
        bool bad() const; 

        iostate exceptions() const; 
        void exceptions(iostate except); 

        // 27.4.4.1 Constructor/destructor: 
        explicit basic_ios(basic_streambuf<charT,traits>* sb); 
        virtual ~basic_ios(); 

        // 27.4.4.2 Members: 
        basic_ostream<charT,traits>* tie() const; 
        basic_ostream<charT,traits>* tie(basic_ostream<charT,traits>* tiestr);
 
        basic_streambuf<charT,traits>* rdbuf() const; 
        basic_streambuf<charT,traits>* rdbuf(basic_streambuf<charT,traits>* sb);

        basic_ios& copyfmt(const basic_ios& rhs); 

        char_type fill() const; 
        char_type fill(char_type ch); 

        // 27.4.2.3 locales: 
        locale imbue(const locale& loc); 

        char narrow(char_type c, char dfault) const; 
        char_type widen(char c) const; 

    protected: 
        basic_ios(); 
        void init(basic_streambuf<charT,traits>* sb); 

    private: 
        basic_ios(const basic_ios& ); // not defined 
        basic_ios& operator=(const basic_ios&); // not defined 
    }; 
    
    typedef basic_ios<char> ios;
    typedef basic_ios<wchar_t> wios;

}   /* namespace std */

#endif /* _BASIC_IOS */
